{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AAAqD;AACf;AACX;;AAE3B,6CAA6C,6DAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAEgD;;;;;;;;;;;;;;;;;;ACrDA;AACf;AACX;;AAE3B,qCAAqC,cAAc;AACnD,mCAAmC,6DAAe;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK,mBAAmB,6DAAe;;AAEI;;;;;;;;;;;;;;;;;ACpCC;AACN;;AAEtC;AACA;;AAEA,oCAAoC,cAAc;AAClD,8BAA8B,wDAAW;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAEiC;;;;;;;;;;;;;;;ACnFtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmC;;;;;;;;;;;;;;;;;;;;;;;;ACnCU;AACS;AACS;AACnB;AACoB;AACoB;AAC9C;AACQ;AACd;;AAEhC,wEAAwE,cAAc;AACtF;AACA;AACA;AACA;;AAEA,gBAAgB,cAAc;;AAE9B;AACA,4BAA4B,wDAAW,0FAA0F,6EAA8B,WAAW,mEAAoB;AAC9L,kBAAkB,8DAAU;AAC5B;AACA;AACA;AACA;AACA,uBAAuB,yDAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAK,wCAAwC,+DAAW;AAClF;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,mCAAmC,uDAAK,iBAAiB,8DAAU;AACnE;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+HAA+H;AAC/H;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,wDAAwD,cAAc;AACtE;AACA;AACA;AACA;AACA,MAAM,QAAQ;;AAEd;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6FAA6F,qDAAS;AACtG;;AAEA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,kGAAkG,qDAAS;AAC3G;AACA,4BAA4B,qDAAS,0DAA0D,qDAAS;AACxG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE2B;;;;;;;;;;;;;;;;AC7VM;;AAEtC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uDAAK;;AAE6B;;;;;;;;;;;;;;;;AChDK;;AAEvC;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAuH;AACvH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,gDAAS;;AAElE;AACA;AACA;AACA,wDAAwD,gDAAS,SAAS,gDAAS;AACnF;AACA;;AAEoC;;;;;;;;;;;;;;;;AC5EJ;;AAEhC;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAK;;AAE+B;;;;;;;;;;;;;;;AC9CpC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE4C;;;;;;;;;;;;;;;ACtD5C;AACA;AACA;AACA;AACA;;AAE4B;;;;;;;;;;;;;;;;;;;;;ACN5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAE6F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFlC;AACtB;AACuE;AACpB;AACX;AACT;AACA;AACR;AACP;AACI;AACM;AACN;AACkB;AACV;AACJ;AACE;AACuB;AACG;AACA;AAC1B;AACJ;AACE;AACD;AAC1B;AACG;AACM;AACP;;AAEpC;AACA,qBAAqB,uDAAK;AAC1B,EAAE;;AAE0B;;;;;;;;;;;;;;;;;;;AChC0B;AACiB;AACgB;AACjD;;AAEtC;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wEAAqB;AACpC;;AAEA;AACA;AACA,QAAQ,wDAAQ,mBAAmB,wEAAqB;AACxD;AACA;;AAEA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA,eAAe,+DAAa;AAC5B;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,+DAAa;AAC5B;;AAEA;AACA;AACA,eAAe,+DAAa;AAC5B;;AAEA;AACA;AACA,SAAS,wDAAQ;AACjB,sBAAsB,wDAAQ,aAAa,wEAAqB;AAChE;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,+DAAa;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,+DAAa;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8DAAc;AACtC;AACA;AACA,OAAO;AACP;AACA;AACA,wBAAwB,+DAAa;;AAErC;AACA,4BAA4B,qDAAS;AACrC,oGAAoG,qDAAS;;AAE7G;AACA;AACA;AACA;AACA,2CAA2C,qDAAS;AACpD,8BAA8B,qDAAS;AACvC;AACA;AACA,gCAAgC,+DAAa;AAC7C;AACA,WAAW;AACX;AACA,QAAQ,6BAA6B,qDAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAEwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACraY;AACJ;AACC;AACM;AACT;AAChB;AACyB;AACtB;AACmB;AACZ;AACU;AACA;AAClB;;AAErB,0BAA0B,EAAE,GAAG,EAAE;;AAEjC;;AAEA;AACA,yBAAyB,mDAAa;AACtC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,YAAY,wDAAQ;AACpB;AACA;;AAEA,0CAA0C,yBAAyB;;AAEnE;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAQ;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iDAAW;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA,UAAU,iDAAW;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA,UAAU,iDAAW;AACrB;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,mDAAa;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE4B;;;;;;;;;;;;;;;;;;;;;ACnJ4B;AACP;AACG;AAC1B;AACO;AACM;;AAE5C;AACA,4BAA4B,gDAAM;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,EAAE,0DAAa;AACzB,uBAAuB,uDAAU;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,aAAa,8DAAc;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,aAAa,cAAc;AAC3B;AACA,KAAK,gDAAM;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,yGAAyG,qDAAS;AAClH;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAuH,qDAAS;AAChI;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpVK;AACH;AACgB;AACT;AAC0B;AACpD;AACG;AACmB;AACZ;AACU;AACA;AAClB;;AAErB;AACA,yBAAyB,mDAAa;AACtC;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qDAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wEAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+DAAa;AACnD,wDAAwD,qDAAS;AACjE;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,mDAAa;AAClB;AACA;AACA,uDAAK;;AAE4B;;;;;;;;;;;;;;;;;;;ACvG2B;AACtB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,uDAAK;AAC1C,MAAM,wDAAQ,eAAe,uDAAK;AAClC,4BAA4B,uDAAK;AACjC,8BAA8B,uDAAK;AACnC,oDAAoD,uDAAK;AACzD,MAAM,uDAAK,qCAAqC,uDAAK;AACrD,MAAM,uDAAK,2BAA2B,uDAAK;AAC3C,uCAAuC,uDAAK;AAC5C,iDAAiD;AACjD,SAAS,uDAAK;AACd;AACA;AACA;AACA,MAAM,uDAAK;AACX,kCAAkC,uDAAK;AACvC;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,MAAM,kBAAkB,uDAAK;AAC7B;AACA,MAAM,EAAE,wDAAQ,+BAA+B,uDAAK;AACpD;AACA;AACA;AACA,WAAW,oDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wDAAQ;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA,MAAM,uDAAK,2BAA2B,uDAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAEwD;;;;;;;;;;;;;;;;;;;;ACxH9B;AACO;AACH;AACS;AAClB;;AAE1B;AACA,6BAA6B,gDAAM;AACnC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAK;;AAEgC;;;;;;;;;;;;;;;;;;;;AC9BsB;AACL;AACvB;AACO;AACM;;AAE5C;AACA;AACA,2BAA2B,gDAAM;AACjC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAY,oBAAoB,qBAAqB;AACzF;AACA,kEAAkE,wDAAY;AAC9E,gDAAgD,4DAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+DAAa;AACvC,MAAM;AACN,0BAA0B,+DAAa;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA;AACA;AACA;AACA,iHAAiH,qDAAS;AAC1H;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAM;AACtC;AACA,KAAK,gDAAM;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uDAAK;;AAE8B;;;;;;;;;;;;;;;;;;;;;;;;;;ACzTmB;AAChB;AACO;AACd;AAC0B;AACO;AAChB;AACmB;AACA;AAC9C;AACuB;;AAE5C;AACA,4BAA4B,gDAAM;AAClC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,oEAAsB;AAC3D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE,0DAAa,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uDAAK,qCAAqC,uDAAU;AACvG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oEAAsB;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,0DAAa;AACxB;AACA,OAAO,QAAQ,oEAAsB;AACrC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;;AAEA;AACA;AACA,mCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sEAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA,gCAAgC,sEAAiB;AACjD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAkB,qDAAS;AAC3B;AACA;AACA,uBAAuB,0DAAa;AACpC,sBAAsB,qDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,qDAAS,uBAAuB,qDAAS;AAC/D;AACA,wBAAwB,qDAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,qDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAS,wBAAwB,qDAAS;AAChE;AACA;AACA;AACA;AACA,wBAAwB,qDAAS;;AAEjC;AACA;AACA;AACA;AACA;AACA,6CAA6C,qDAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK,gDAAM;AACX;AACA;AACA;AACA;AACA;AACA,gCAAgC,oEAAsB;AACtD,gCAAgC,oEAAsB;AACtD,uDAAK;;AAE+B;;;;;;;;;;;;;;;;;;;AC/cqB;AACV;AAC2B;AACjC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAQ,kBAAkB,wEAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wEAAqB;AAClD;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAK;AACjC,uBAAuB,wEAAqB;AAC5C;AACA;AACA,wBAAwB,+DAAa;AACrC,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,uEAAuE,wEAAqB;AAC5F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwC;;;;;;;;;;;;;;;;AC7JQ;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,qDAAS;AACrE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;;AAEoC;;;;;;;;;;;;;;;;;;;AClIqB;AACC;AACgB;AAC5C;;AAE9B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA,kBAAkB,qDAAS;AAC3B;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+DAAa;AAC/C;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA,eAAe,wEAAqB;AACpC;AACA;AACA,QAAQ,wDAAQ,mBAAmB,wEAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE6C;;;;;;;;;;;;;;;;;;;ACvJN;AACkB;AACT;AAClB;;AAE9B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,kBAAkB,uDAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+DAAa;AAC/C;AACA;AACA;AACA;AACA,oBAAoB,+DAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,+DAAa;AAClE;AACA,eAAe,+DAAa;AAC5B;AACA,KAAK;AACL;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAS;AAC3B;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA,WAAW,qDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE6C;;;;;;;;;;;;;;;;;;;;AC1LP;AACA;AACZ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uDAAU;AAC3B;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,uDAAK;AACL,uDAAK;AACL,uDAAK;;AAEkC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCe;AAChB;AACG;AACf;AACP;AACyB;AACtB;AACmB;AACZ;AACU;AACA;AAClB;;AAErB;AACA,0BAA0B,mDAAa;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE6B;;;;;;;;;;;;;;;;;;;;ACvHH;AACO;AACH;AACS;AAClB;;AAE1B;AACA,2BAA2B,gDAAM;AACjC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE8B;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BmB;AAChB;AACmB;AAChB;AACf;AACP;AACyB;AACH;AACZ;AACU;AACA;AAClB;;AAErB;AACA,0BAA0B,mDAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,EAAE,0DAAa,QAAQ;AAC7B,sCAAsC;AACtC,kBAAkB,uDAAU;AAC5B,uIAAuI;;AAEvI;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,uDAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA,kIAAkI;AAClI;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE6B;;;;;;;;;;;;ACxIlC,MAAMA,YAAY,GAAG;EACjBC,OAAO,EAAE,OAAO;EAChBC,IAAIA,CAACC,CAAC,GAAGC,QAAQ,CAACC,IAAI,EAAE;IACpB,KAAK,IAAIC,CAAC,IAAIH,CAAC,CAACI,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAACC,UAAU,CAACF,CAAC,CAAC;EAC1E,CAAC;EACDE,UAAUA,CAACL,CAAC,EAAE;IACV,KAAK,IAAIG,CAAC,IAAIH,CAAC,CAACI,gBAAgB,CAAC,aAAa,CAAC,EAAE;MAC7C,IAAIE,CAAC,GAAGH,CAAC,C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","sources":["webpack://gulp-builder/./node_modules/imask/esm/controls/html-contenteditable-mask-element.js","webpack://gulp-builder/./node_modules/imask/esm/controls/html-input-mask-element.js","webpack://gulp-builder/./node_modules/imask/esm/controls/html-mask-element.js","webpack://gulp-builder/./node_modules/imask/esm/controls/input-history.js","webpack://gulp-builder/./node_modules/imask/esm/controls/input.js","webpack://gulp-builder/./node_modules/imask/esm/controls/mask-element.js","webpack://gulp-builder/./node_modules/imask/esm/core/action-details.js","webpack://gulp-builder/./node_modules/imask/esm/core/change-details.js","webpack://gulp-builder/./node_modules/imask/esm/core/continuous-tail-details.js","webpack://gulp-builder/./node_modules/imask/esm/core/holder.js","webpack://gulp-builder/./node_modules/imask/esm/core/utils.js","webpack://gulp-builder/./node_modules/imask/esm/index.js","webpack://gulp-builder/./node_modules/imask/esm/masked/base.js","webpack://gulp-builder/./node_modules/imask/esm/masked/date.js","webpack://gulp-builder/./node_modules/imask/esm/masked/dynamic.js","webpack://gulp-builder/./node_modules/imask/esm/masked/enum.js","webpack://gulp-builder/./node_modules/imask/esm/masked/factory.js","webpack://gulp-builder/./node_modules/imask/esm/masked/function.js","webpack://gulp-builder/./node_modules/imask/esm/masked/number.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern/chunk-tail-details.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern/cursor.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern/fixed-definition.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern/input-definition.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pipe.js","webpack://gulp-builder/./node_modules/imask/esm/masked/range.js","webpack://gulp-builder/./node_modules/imask/esm/masked/regexp.js","webpack://gulp-builder/./node_modules/imask/esm/masked/repeat.js","webpack://gulp-builder/./src/js/components/slider.js","webpack://gulp-builder/webpack/bootstrap","webpack://gulp-builder/webpack/runtime/define property getters","webpack://gulp-builder/webpack/runtime/hasOwnProperty shorthand","webpack://gulp-builder/webpack/runtime/make namespace object","webpack://gulp-builder/./src/js/main.js"],"sourcesContent":["import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\nconst KEY_Z = 90;\nconst KEY_Y = 89;\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onBeforeinput = this._onBeforeinput.bind(this);\n    this._onCompositionEnd = this._onCompositionEnd.bind(this);\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /** Is element in focus */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /** Binds HTMLElement events to mask internal events */\n  bindEvents(handlers) {\n    this.input.addEventListener('keydown', this._onKeydown);\n    this.input.addEventListener('input', this._onInput);\n    this.input.addEventListener('beforeinput', this._onBeforeinput);\n    this.input.addEventListener('compositionend', this._onCompositionEnd);\n    this.input.addEventListener('drop', handlers.drop);\n    this.input.addEventListener('click', handlers.click);\n    this.input.addEventListener('focus', handlers.focus);\n    this.input.addEventListener('blur', handlers.commit);\n    this._handlers = handlers;\n  }\n  _onKeydown(e) {\n    if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n    if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (!e.isComposing) this._handlers.selectionChange(e);\n  }\n  _onBeforeinput(e) {\n    if (e.inputType === 'historyUndo' && this._handlers.undo) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (e.inputType === 'historyRedo' && this._handlers.redo) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n  }\n  _onCompositionEnd(e) {\n    this._handlers.input(e);\n  }\n  _onInput(e) {\n    if (!e.isComposing) this._handlers.input(e);\n  }\n\n  /** Unbinds HTMLElement events to mask internal events */\n  unbindEvents() {\n    this.input.removeEventListener('keydown', this._onKeydown);\n    this.input.removeEventListener('input', this._onInput);\n    this.input.removeEventListener('beforeinput', this._onBeforeinput);\n    this.input.removeEventListener('compositionend', this._onCompositionEnd);\n    this.input.removeEventListener('drop', this._handlers.drop);\n    this.input.removeEventListener('click', this._handlers.click);\n    this.input.removeEventListener('focus', this._handlers.focus);\n    this.input.removeEventListener('blur', this._handlers.commit);\n    this._handlers = {};\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport InputHistory from './input-history.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._rawInputValue = '';\n    this.history = new InputHistory();\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onUndo = this._onUndo.bind(this);\n    this._onRedo = this._onRedo.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl('auto');\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl('auto');\n  }\n\n  /** Raw input value */\n  get rawInputValue() {\n    return this._rawInputValue;\n  }\n  set rawInputValue(str) {\n    if (this.rawInputValue === str) return;\n    this.masked.rawInputValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl('auto');\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n      undo: this._onUndo,\n      redo: this._onRedo\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n    this._unmaskedValue = this.masked.unmaskedValue;\n    this._rawInputValue = this.masked.rawInputValue;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl(cursorPos) {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newRawInputValue = this.masked.rawInputValue;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    this._rawInputValue = newRawInputValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n    if (isChanged) this._fireChangeEvents();\n    if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n      unmaskedValue: newUnmaskedValue,\n      selection: {\n        start: this.selectionStart,\n        end: this.cursorPos\n      }\n    });\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts; // TODO types, yes, mask is optional\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) this.updateValue();\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  _onUndo() {\n    this._applyHistoryState(this.history.undo());\n  }\n  _onRedo() {\n    this._applyHistoryState(this.history.redo());\n  }\n  _applyHistoryState(state) {\n    if (!state) return;\n    this._historyChanging = true;\n    this.unmaskedValue = state.unmaskedValue;\n    this.el.select(state.selection.start, state.selection.end);\n    this._saveSelection();\n    this._historyChanging = false;\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as RepeatBlock } from './masked/repeat.js';\nimport './core/action-details.js';\nimport './controls/input-history.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) {\n      details = details.aggregate(this._appendCharRaw(ch, flags));\n\n      // TODO handle `skip`?\n\n      // try `autofix` lookahead\n      if (!details.rawInserted && this.autofix === 'pad') {\n        const noFixState = this.state;\n        this.state = consistentState;\n        let fixDetails = this.pad(flags);\n        const chDetails = this._appendCharRaw(ch, flags);\n        fixDetails = fixDetails.aggregate(chDetails);\n\n        // if fix was applied or\n        // if details are equal use skip restoring state optimization\n        if (chDetails.rawInserted || fixDetails.equals(details)) {\n          details = fixDetails;\n        } else {\n          this.state = noFixState;\n        }\n      }\n    }\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (inserted === void 0) {\n      inserted = '';\n    }\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\nconst DefaultPattern = 'd{.}`m{.}`Y';\n\n// Make format and parse required when pattern is provided\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  mask: Date,\n  pattern: DefaultPattern,\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  get autofix() {\n    return this.currentMask ? this.currentMask.autofix : this._autofix;\n  }\n  set autofix(autofix) {\n    this._autofix = autofix;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\n/** Currently chosen mask */\n/** Currently chosen mask */\n/** Compliled {@link Masked} options */\n/** Chooses {@link Masked} depending on input value */\nMaskedDynamic.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { DIRECTION } from '../core/utils.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport './base.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super({\n      ...MaskedEnum.DEFAULTS,\n      ...opts\n    }); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: enum_,\n      ...eopts\n    } = opts;\n    if (enum_) {\n      const lengths = enum_.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = enum_;\n    }\n    super._update(eopts);\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const matchFrom = Math.min(this.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    const matches = this.enum.filter(e => this.matchValue(e, this.unmaskedValue + ch, matchFrom));\n    if (matches.length) {\n      if (matches.length === 1) {\n        this._forEachBlocksInRange(0, this.value.length, (b, bi) => {\n          const mch = matches[0][bi];\n          if (bi >= this.value.length || mch === b.value) return;\n          b.reset();\n          b._appendChar(mch, flags);\n        });\n      }\n      const d = super._appendCharRaw(matches[0][this.value.length], flags);\n      if (matches.length === 1) {\n        matches[0].slice(this.unmaskedValue.length).split('').forEach(mch => d.aggregate(super._appendCharRaw(mch)));\n      }\n      return d;\n    }\n    return new ChangeDetails({\n      skip: !this.isComplete\n    });\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    // just drop tail\n    return new ContinuousTailDetails('', fromPos);\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (fromPos === toPos) return new ChangeDetails();\n    const matchFrom = Math.min(super.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    let pos;\n    for (pos = fromPos; pos >= 0; --pos) {\n      const matches = this.enum.filter(e => this.matchValue(e, this.value.slice(matchFrom, pos), matchFrom));\n      if (matches.length > 1) break;\n    }\n    const details = super.remove(pos, toPos);\n    details.tailShift += pos - fromPos;\n    return details;\n  }\n  get isComplete() {\n    return this.enum.indexOf(this.value) >= 0;\n  }\n}\n/** Match enum value */\nMaskedEnum.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  matchValue: (estr, istr, matchFrom) => estr.indexOf(istr, matchFrom) === matchFrom\n};\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _MaskedNumber;\n/** Number mask */\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const oldValue = this._value;\n    this._value += ch;\n    const num = this.number;\n    let accepted = !isNaN(num);\n    let skip = false;\n    if (accepted) {\n      let fixedNum;\n      if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n      if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n      if (fixedNum != null) {\n        if (this.autofix) {\n          this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n          skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n        } else {\n          accepted = false;\n        }\n      }\n      accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n    }\n    let appendDetails;\n    if (!accepted) {\n      this._value = oldValue;\n      appendDetails = new ChangeDetails();\n    } else {\n      appendDetails = new ChangeDetails({\n        inserted: this._value.slice(oldValue.length),\n        rawInserted: skip ? '' : ch,\n        skip\n      });\n    }\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\n_MaskedNumber = MaskedNumber;\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            repeat,\n            ...bOpts\n          } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n          const blockOpts = {\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            autofix: this.autofix,\n            ...bOpts,\n            repeat,\n            parent: this\n          };\n          const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    if (!state) {\n      this.reset();\n      return;\n    }\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n      var _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    this._forEachBlocksInRange(0, this.displayValue.length, b => details.aggregate(b.pad(flags)));\n    return details;\n  }\n}\nMaskedPattern.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        details.aggregate(tailDetails);\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    const details = new ChangeDetails({\n      inserted: this.char,\n      rawInserted: isResolved ? this.char : ''\n    });\n    this._value = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n  pad(flags) {\n    return this._appendPlaceholder();\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details = new ChangeDetails();\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    if (this.isFilled || this.isOptional) return new ChangeDetails();\n    this.isFilled = true;\n    return new ChangeDetails({\n      inserted: this.placeholderChar\n    });\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!ch) details.skip = !this.isComplete;\n    return [ch, details];\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.autofix || this.value.length + 1 > this.maxLength) return super._appendCharRaw(ch, flags);\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const [minstr, maxstr] = this.boundaries(this.value + ch);\n    if (Number(maxstr) < this.from) return super._appendCharRaw(fromStr[this.value.length], flags);\n    if (Number(minstr) > this.to) {\n      if (!flags.tail && this.autofix === 'pad' && this.value.length + 1 < this.maxLength) {\n        return super._appendCharRaw(fromStr[this.value.length], flags).aggregate(this._appendCharRaw(ch, flags));\n      }\n      return super._appendCharRaw(toStr[this.value.length], flags);\n    }\n    return super._appendCharRaw(ch, flags);\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    if (this.value.length === this.maxLength) return details;\n    const value = this.value;\n    const padLength = this.maxLength - this.value.length;\n    if (padLength) {\n      this.reset();\n      for (let i = 0; i < padLength; ++i) {\n        details.aggregate(super._appendCharRaw('0', flags));\n      }\n\n      // append tail\n      value.split('').forEach(ch => this._appendCharRaw(ch));\n    }\n    return details;\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern mask */\nclass RepeatBlock extends MaskedPattern {\n  get repeatFrom() {\n    var _ref;\n    return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n  }\n  get repeatTo() {\n    var _ref2;\n    return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n  }\n  constructor(opts) {\n    super(opts);\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    var _ref3, _ref4, _this$_blocks;\n    const {\n      repeat,\n      ...blockOpts\n    } = normalizeOpts(opts); // TODO type\n    this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n    const block = createMask(this._blockOpts);\n    this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n    super._update({\n      mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n      blocks: {\n        m: block\n      },\n      eager: block.eager,\n      overwrite: block.overwrite,\n      skipInvalid: block.skipInvalid,\n      lazy: block.lazy,\n      placeholderChar: block.placeholderChar,\n      displayChar: block.displayChar\n    });\n  }\n  _allocateBlock(bi) {\n    if (bi < this._blocks.length) return this._blocks[bi];\n    if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n      this._blocks.push(createMask(this._blockOpts));\n      this.mask += 'm';\n      return this._blocks[this._blocks.length - 1];\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n    // try to get a block or\n    // try to allocate a new block if not allocated already\n    block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n      var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      if (blockDetails.skip && allocated) {\n        // remove the last allocated block and break\n        this._blocks.pop();\n        this.mask = this.mask.slice(1);\n        break;\n      }\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  _trimEmptyTail(fromPos, toPos) {\n    var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n    let lastBlockIndex;\n    if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n    if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n    let removeCount = 0;\n    for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n      if (this._blocks[blockIndex].unmaskedValue) break;\n    }\n    if (removeCount) {\n      this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n      this.mask = this.mask.slice(removeCount);\n    }\n  }\n  reset() {\n    super.reset();\n    this._trimEmptyTail();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._trimEmptyTail(fromPos, toPos);\n    return removeDetails;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos == null && this.repeatTo === Infinity) return Infinity;\n    return super.totalInputPositions(fromPos, toPos);\n  }\n  get state() {\n    return super.state;\n  }\n  set state(state) {\n    this._blocks.length = state._blocks.length;\n    this.mask = this.mask.slice(0, this._blocks.length);\n    super.state = state;\n  }\n}\nIMask.RepeatBlock = RepeatBlock;\n\nexport { RepeatBlock as default };\n","const swiffyslider = {\r\n    version: \"1.6.0\",\r\n    init(e = document.body) {\r\n        for (let t of e.querySelectorAll(\".swiffy-slider\")) this.initSlider(t);\r\n    },\r\n    initSlider(e) {\r\n        for (let t of e.querySelectorAll(\".slider-nav\")) {\r\n            let i = t.classList.contains(\"slider-nav-next\");\r\n            t.addEventListener(\"click\", () => this.slide(e, i), { passive: !0 });\r\n        }\r\n        for (let t of e.querySelectorAll(\".slider-indicators\")) t.addEventListener(\"click\", () => this.slideToByIndicator()), this.onSlideEnd(e, () => this.handleIndicators(e), 0);\r\n        if (e.classList.contains(\"slider-nav-autoplay\")) {\r\n            const t = e.getAttribute(\"data-slider-nav-autoplay-interval\") ? e.getAttribute(\"data-slider-nav-autoplay-interval\") : 2500;\r\n            this.autoPlay(e, t, e.classList.contains(\"slider-nav-autopause\"));\r\n        }\r\n        if ([\"slider-nav-autohide\", \"slider-nav-animation\"].some((t) => e.classList.contains(t))) {\r\n            const t = e.getAttribute(\"data-slider-nav-animation-threshold\") ? e.getAttribute(\"data-slider-nav-animation-threshold\") : 0.3;\r\n            this.setVisibleSlides(e, t);\r\n        }\r\n    },\r\n    setVisibleSlides(e, t = 0.3) {\r\n        let i = new IntersectionObserver(\r\n            (t) => {\r\n                t.forEach((e) => {\r\n                    e.isIntersecting ? e.target.classList.add(\"slide-visible\") : e.target.classList.remove(\"slide-visible\");\r\n                }),\r\n                    e.querySelector(\".slider-container>*:first-child\").classList.contains(\"slide-visible\") ? e.classList.add(\"slider-item-first-visible\") : e.classList.remove(\"slider-item-first-visible\"),\r\n                    e.querySelector(\".slider-container>*:last-child\").classList.contains(\"slide-visible\") ? e.classList.add(\"slider-item-last-visible\") : e.classList.remove(\"slider-item-last-visible\");\r\n            },\r\n            { root: e.querySelector(\".slider-container\"), threshold: t }\r\n        );\r\n        for (let t of e.querySelectorAll(\".slider-container>*\")) i.observe(t);\r\n    },\r\n    slide(e, t = !0) {\r\n        const i = e.querySelector(\".slider-container\"),\r\n            s = e.classList.contains(\"slider-nav-page\"),\r\n            l = e.classList.contains(\"slider-nav-noloop\"),\r\n            r = e.classList.contains(\"slider-nav-nodelay\"),\r\n            o = i.children,\r\n            n = parseInt(window.getComputedStyle(i).columnGap),\r\n            a = o[0].offsetWidth + n;\r\n        let d = t ? i.scrollLeft + a : i.scrollLeft - a;\r\n        s && (d = t ? i.scrollLeft + i.offsetWidth : i.scrollLeft - i.offsetWidth),\r\n            i.scrollLeft < 1 && !t && !l && (d = i.scrollWidth - i.offsetWidth),\r\n            i.scrollLeft >= i.scrollWidth - i.offsetWidth && t && !l && (d = 0),\r\n            i.scroll({ left: d, behavior: r ? \"auto\" : \"smooth\" });\r\n    },\r\n    slideToByIndicator() {\r\n        const e = window.event.target,\r\n            t = Array.from(e.parentElement.children).indexOf(e),\r\n            i = e.parentElement.children.length,\r\n            s = e.closest(\".swiffy-slider\"),\r\n            l = (s.querySelector(\".slider-container\").children.length / i) * t;\r\n        this.slideTo(s, l);\r\n    },\r\n    slideTo(e, t) {\r\n        const i = e.querySelector(\".slider-container\"),\r\n            s = parseInt(window.getComputedStyle(i).columnGap),\r\n            l = i.children[0].offsetWidth + s,\r\n            r = e.classList.contains(\"slider-nav-nodelay\");\r\n        i.scroll({ left: l * t, behavior: r ? \"auto\" : \"smooth\" });\r\n    },\r\n    onSlideEnd(e, t, i = 125) {\r\n        let s;\r\n        e.querySelector(\".slider-container\").addEventListener(\r\n            \"scroll\",\r\n            function () {\r\n                window.clearTimeout(s), (s = setTimeout(t, i));\r\n            },\r\n            { capture: !1, passive: !0 }\r\n        );\r\n    },\r\n    autoPlay(e, t, i) {\r\n        t = t < 750 ? 750 : t;\r\n        let s = setInterval(() => this.slide(e), t);\r\n        const l = () => this.autoPlay(e, t, i);\r\n        return (\r\n            i &&\r\n            ([\"mouseover\", \"touchstart\"].forEach(function (t) {\r\n                e.addEventListener(\r\n                    t,\r\n                    function () {\r\n                        window.clearTimeout(s);\r\n                    },\r\n                    { once: !0, passive: !0 }\r\n                );\r\n            }),\r\n                [\"mouseout\", \"touchend\"].forEach(function (t) {\r\n                    e.addEventListener(\r\n                        t,\r\n                        function () {\r\n                            l();\r\n                        },\r\n                        { once: !0, passive: !0 }\r\n                    );\r\n                })),\r\n            s\r\n        );\r\n    },\r\n    handleIndicators(e) {\r\n        if (!e) return;\r\n        const t = e.querySelector(\".slider-container\"),\r\n            i = t.scrollWidth - t.offsetWidth,\r\n            s = t.scrollLeft / i;\r\n        for (let t of e.querySelectorAll(\".slider-indicators\")) {\r\n            let e = t.children,\r\n                i = Math.abs(Math.round((e.length - 1) * s));\r\n            for (let t of e) t.classList.remove(\"active\");\r\n            e[i].classList.add(\"active\");\r\n        }\r\n    },\r\n};\r\n(window.swiffyslider = swiffyslider),\r\n    document.currentScript.hasAttribute(\"data-noinit\") ||\r\n    (document.currentScript.hasAttribute(\"defer\")\r\n        ? swiffyslider.init()\r\n        : (document.onreadystatechange = () => {\r\n            \"interactive\" === document.readyState && swiffyslider.init();\r\n        }));\r\n//# sourceMappingURL=swiffy-slider.min.js.map\r\nconst swiffysliderextensions = { version: \"1.6.0\", draggingtimer: null, init(e = document.body) { for (const s of e.querySelectorAll(\".swiffy-slider\")) this.initSlider(s) }, initSlider(e) { e.classList.contains(\"slider-nav-mousedrag\") && e.addEventListener(\"mousedown\", s => this.handleMouseDrag(s, e), { passive: !0 }) }, handleMouseDrag(e, s) { if (e.srcElement.classList.contains(\"slider-nav\") || e.srcElement.parentElement.classList.contains(\"slider-indicators\")) return; const t = s.querySelector(\".slider-container\"); s.classList.contains(\"dragging\") && clearTimeout(this.draggingtimer), t.style.cursor = \"grabbing\", s.classList.add(\"dragging\"); const i = t.scrollLeft, n = e.clientX, r = t.children[0].offsetWidth + parseInt(window.getComputedStyle(t).columnGap), o = r * (t.children.length - 1), l = t.scrollLeft; let d = l; const a = e => { const s = e.clientX - n, a = i - 1.8 * s; a > 0 && a <= o && (t.scrollLeft = a, s < 0 ? d = o <= l ? l : t.scrollLeft + (r + 1.8 * s) : l > 0 && (d = t.scrollLeft - (r - 1.8 * s))) }; t.addEventListener(\"mousemove\", a, { passive: !0 }), document.addEventListener(\"mouseup\", () => { t.removeEventListener(\"mousemove\", a), t.style.cursor = null, d < 0 && (d = 0), t.scroll({ left: d, behavior: \"smooth\" }), this.draggingtimer = setTimeout(() => { s.classList.remove(\"dragging\") }, 550) }, { once: !0, passive: !0 }) } }; window.swiffyslider.extensions = swiffysliderextensions, document.currentScript.hasAttribute(\"data-noinit\") || window.addEventListener(\"load\", () => { swiffyslider.extensions.init() });\r\n//# sourceMappingURL=swiffy-slider-extensions.min.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './components/slider.js'\r\nimport IMask from 'imask';\r\n\r\nif (document.querySelector('.circle-1')) {\r\n    // svg path computer\r\n    function pathComputer(initialPath, target, divider, element) {\r\n        let array = initialPath.split(\" \");\r\n\r\n        array.forEach((item, idx) => {\r\n            if (!isNaN(item)) {\r\n                array[idx] = (+item / divider) * target;\r\n            }\r\n        });\r\n\r\n        array = array.join(\" \");\r\n        element.style.offsetPath = `path(\"${array}\")`;\r\n    }\r\n\r\n    // два больших круга\r\n    const trajectory1_1 = \"M 1500 650 C 900 620 400 550 -400 240\";\r\n    const trajectory1_1_divider = 1734;\r\n\r\n    const trajectory2_1 = \"M -300 0 C 500 620 400 550 300 1400\";\r\n    const trajectory2_1_divider = 1326;\r\n\r\n    const circle1_1 = document.querySelector(\".circle-1 .white-circle-1\");\r\n    const circle2_1 = document.querySelector(\".circle-2 .white-circle-1\");\r\n\r\n    // два маленьких круга\r\n\r\n    const trajectory1_2 = \"M 1600 -100 C 900 270 400 100 200 -100\";\r\n    const trajectory1_2_divider = 1916;\r\n    const circle1_2 = document.querySelector(\".circle-1 .white-circle-small\");\r\n\r\n    const trajectory2_2 = \"M -200 900 C 400 1000 300 1150 -100 2500\";\r\n    const trajectory2_2_divider = 1326;\r\n    const circle2_2 = document.querySelector(\".circle-2 .white-circle-small\");\r\n\r\n    // два самых больших круга\r\n\r\n    const trajectory1_3 = \"M 1800 800 C 900 820 200 550 -400 250\";\r\n    const trajectory1_3_divider = 1916;\r\n    const circle1_3 = document.querySelector(\".circle-1 .white-circle-2\");\r\n\r\n    const trajectory2_3 = \"M -200 150 C 300 420 300 550 600 2500\";\r\n    const trajectory2_3_divider = 1326;\r\n    const circle2_3 = document.querySelector(\".circle-2 .white-circle-2\");\r\n\r\n    // четыре круга разного размера, двигающихся по одной траектории\r\n\r\n    const trajectory1_4 = \"M 1800 600 C 900 620 400 650 -200 100\";\r\n    const trajectory1_4_divider = 1916;\r\n    const circle1_4 = document.querySelector(\".circle-1 .middle-circle-1\");\r\n\r\n    const trajectory2_4 = \"M -250 400 C 300 520 300 550 400 1500\";\r\n    const trajectory2_4_divider = 1326;\r\n    const circle2_4 = document.querySelector(\".circle-2 .middle-circle-1\");\r\n\r\n    const trajectory1_5 = \"M 1600 500 C 900 620 400 650 -200 100\";\r\n    const trajectory1_5_divider = 1916;\r\n    const circle1_5 = document.querySelector(\".circle-1 .middle-circle-2\");\r\n\r\n    const trajectory2_5 = \"M -250 400 C 300 520 300 550 400 1500\";\r\n    const trajectory2_5_divider = 1326;\r\n    const circle2_5 = document.querySelector(\".circle-2 .middle-circle-2\");\r\n\r\n    const circleW_1 = document\r\n        .querySelector(\".circle-1\")\r\n        .getBoundingClientRect().width;\r\n\r\n    const circleW_2 = document\r\n        .querySelector(\".circle-2\")\r\n        .getBoundingClientRect().width;\r\n\r\n    pathComputer(trajectory1_1, circleW_1, trajectory1_1_divider, circle1_1);\r\n    pathComputer(trajectory2_1, circleW_2, trajectory2_1_divider, circle2_1);\r\n    pathComputer(trajectory1_2, circleW_1, trajectory1_2_divider, circle1_2);\r\n    pathComputer(trajectory2_2, circleW_2, trajectory2_2_divider, circle2_2);\r\n    pathComputer(trajectory1_3, circleW_1, trajectory1_3_divider, circle1_3);\r\n    pathComputer(trajectory2_3, circleW_2, trajectory2_3_divider, circle2_3);\r\n    pathComputer(trajectory1_4, circleW_1, trajectory1_4_divider, circle1_4);\r\n    pathComputer(trajectory2_4, circleW_2, trajectory2_4_divider, circle2_4);\r\n    pathComputer(trajectory1_5, circleW_1, trajectory1_5_divider, circle1_5);\r\n    pathComputer(trajectory2_5, circleW_2, trajectory2_5_divider, circle2_5);\r\n\r\n    // animation circles rotation\r\n    const circle = document.querySelector(\".circles\");\r\n    const circle1 = document.querySelector(\".circle-1\");\r\n    const circle2 = document.querySelector(\".circle-2\");\r\n\r\n    const windowWidth = document.querySelector(\"body\").clientWidth;\r\n    const windowHeight = window.innerHeight\r\n\r\n    // Центр движения\r\n    let centerX = -100;\r\n    let centerY = 0;\r\n    let radius = 80;\r\n\r\n    const duration = 35.5 * 1000; // 35.5 секунд\r\n    const halfDuration = duration / 2;\r\n\r\n    let offsetX = 0;\r\n    let offsetY = 0;\r\n\r\n    if (windowWidth <= 992) {\r\n        radius = 50;\r\n        centerY = windowHeight * 0.12\r\n        offsetX = windowWidth * 0.65\r\n        offsetY = windowHeight * 0.15\r\n    }\r\n\r\n    if (windowWidth <= 768) {\r\n        offsetX = windowWidth * 0.65\r\n        offsetY = windowHeight * 0.2\r\n    }\r\n\r\n    if (windowWidth <= 700) {\r\n        radius = 30;\r\n        centerX = windowHeight * -0.2\r\n        centerY = windowHeight * 0.08\r\n        offsetX = windowHeight * 0.75\r\n        offsetY = windowHeight * 0.2\r\n    }\r\n\r\n    if (windowWidth <= 650) {\r\n        offsetY = windowHeight * 0.3\r\n    }\r\n\r\n    if (windowWidth <= 570) {\r\n        centerX = windowHeight * -0.24\r\n        centerY = windowHeight * 0.03\r\n        offsetY = windowHeight * 0.35\r\n    }\r\n\r\n    if (windowWidth <= 450) {\r\n        offsetY = windowHeight * 0.65\r\n        centerX = windowHeight * -0.32\r\n        centerY = windowHeight * -0.01\r\n    }\r\n\r\n    let start = null;\r\n\r\n    function animate(timestamp) {\r\n        if (!start) start = timestamp;\r\n        const elapsed = (timestamp - start) % duration;\r\n\r\n        let angle;\r\n        if (elapsed <= halfDuration) {\r\n            angle = (elapsed / halfDuration) * (Math.PI / 2);\r\n        } else {\r\n            angle = (1 - (elapsed - halfDuration) / halfDuration) * (Math.PI / 2);\r\n        }\r\n\r\n        const sin = Math.sin(angle);\r\n        const cos = Math.cos(angle);\r\n\r\n        const x1 = centerX + radius * cos;\r\n        const y1 = centerY + radius * sin;\r\n\r\n        const x2 = x1 + offsetX;\r\n        const y2 = y1 + offsetY;\r\n\r\n        circle1.style.left = `${x1}px`;\r\n        circle1.style.top = `${y1}px`;\r\n\r\n        if (windowWidth > 992) {\r\n            circle2.style.left = `${(windowWidth / 100) * 65.9 + x2}px`;\r\n            circle2.style.top = `${windowWidth / 10 + y2}px`;\r\n        } else {\r\n            circle2.style.left = `${x2}px`;\r\n            circle2.style.top = `${y2}px`;\r\n        }\r\n\r\n        const x = centerX + radius * cos;\r\n        const y = centerY + radius * sin;\r\n\r\n        circle.style.left = `${x}px`;\r\n        circle.style.top = `${y}px`;\r\n\r\n        requestAnimationFrame(animate);\r\n    }\r\n\r\n    requestAnimationFrame(animate);\r\n\r\n    let timeouts = [];\r\n\r\n    // Сброс всех setTimeout\r\n    function clearAllTimers() {\r\n        timeouts.forEach(clearTimeout);\r\n        timeouts = [];\r\n    }\r\n\r\n    // Безопасный setTimeout\r\n    function setSafeTimeout(callback, delay) {\r\n        const t = setTimeout(callback, delay);\r\n        timeouts.push(t);\r\n        return t;\r\n    }\r\n\r\n    // Сброс анимации на элементе\r\n    function resetAnimation(element) {\r\n        if (!element) return;\r\n        element.style.animation = \"none\";\r\n        void element.offsetWidth;\r\n    }\r\n\r\n    // Анимация первого набора кругов\r\n    function startFirstCircles() {\r\n        if (!circle1_1 || !circle2_1) return;\r\n\r\n        circle1_1.style.animation = \"circle1 13s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n        setSafeTimeout(() => resetAnimation(circle1_1), 13000);\r\n\r\n        setSafeTimeout(() => {\r\n            circle2_1.style.animation = \"circle2_1 13s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n            setSafeTimeout(() => resetAnimation(circle2_1), 13000);\r\n        }, 3500);\r\n\r\n        setSafeTimeout(startFirstCircles, 31000);\r\n    }\r\n\r\n    function startSecondCircles() {\r\n        if (!circle1_5 || !circle2_5) return;\r\n\r\n        circle1_5.style.animation = \"middle_circle3 10s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n        setSafeTimeout(() => resetAnimation(circle1_5), 10000);\r\n\r\n        setSafeTimeout(() => {\r\n            circle2_5.style.animation = \"middle_circle4 13s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n            setSafeTimeout(() => resetAnimation(circle2_5), 8000);\r\n        }, 3500);\r\n\r\n        setSafeTimeout(startSecondCircles, 31000);\r\n    }\r\n\r\n    function startThirdCircles() {\r\n        if (!circle1_3 || !circle2_3) return;\r\n\r\n        circle1_3.style.animation = \"circle2 13s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n        setSafeTimeout(() => resetAnimation(circle1_3), 13000);\r\n\r\n        setSafeTimeout(() => {\r\n            circle2_3.style.animation = \"circle2_2 13s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n            setSafeTimeout(() => resetAnimation(circle2_3), 13000);\r\n        }, 5000);\r\n\r\n        setSafeTimeout(startThirdCircles, 31000);\r\n    }\r\n\r\n    function startFourthCircles() {\r\n        if (!circle1_2 || !circle2_2) return;\r\n\r\n        circle1_2.style.animation = \"small_circle1 10s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n        setSafeTimeout(() => resetAnimation(circle1_2), 10000);\r\n\r\n        setSafeTimeout(() => {\r\n            circle2_2.style.animation = \"small_circle2 10s linear\";\r\n            setSafeTimeout(() => resetAnimation(circle2_2), 10000);\r\n        }, 3500);\r\n\r\n        setSafeTimeout(startFourthCircles, 31000); // БЫЛ БАГ: вызывался startThirdCircles()\r\n    }\r\n\r\n    function startFifthCircles() {\r\n        if (!circle1_4 || !circle2_4) return;\r\n\r\n        circle1_4.style.animation = \"middle_circle1 10s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n        setSafeTimeout(() => resetAnimation(circle1_4), 10000);\r\n\r\n        setSafeTimeout(() => {\r\n            circle2_4.style.animation = \"middle_circle2 10s cubic-bezier(0.4, 0, 0.2, 1)\";\r\n            setSafeTimeout(() => resetAnimation(circle2_4), 10000);\r\n        }, 3500);\r\n\r\n        setSafeTimeout(startFifthCircles, 31000);\r\n    }\r\n\r\n    // Основной перезапуск всех анимаций\r\n    function restartAllCircles() {\r\n        clearAllTimers();\r\n\r\n        const allCircles = document.querySelectorAll(\".circle\");\r\n        allCircles.forEach(resetAnimation);\r\n\r\n        startFirstCircles();\r\n        setSafeTimeout(startSecondCircles, 10000);\r\n        setSafeTimeout(startThirdCircles, 15000);\r\n        setSafeTimeout(startFourthCircles, 18500);\r\n        setSafeTimeout(startFifthCircles, 24500);\r\n    }\r\n\r\n    // Запуск при открытии страницы\r\n    restartAllCircles();\r\n\r\n    // Перезапуск при возвращении на вкладку\r\n    document.addEventListener(\"visibilitychange\", () => {\r\n        if (!document.hidden) {\r\n            restartAllCircles();\r\n        }\r\n    });\r\n}\r\n\r\n// footer background\r\n\r\nfunction updateBackgroundFooterBlurHeight() {\r\n    const footer = document.querySelector('footer');\r\n    const backgroundBlur = document.querySelector('.background-footer-blur');\r\n    const svg = backgroundBlur?.querySelector('svg');\r\n    if (footer && backgroundBlur) {\r\n        const footerHeight = footer.offsetHeight;\r\n        const newHeight = footerHeight * 3.2;\r\n        backgroundBlur.style.height = `${newHeight}px`;\r\n        if (window.innerWidth < 1200) {\r\n            if (svg) svg.style.display = 'none';\r\n        } else {\r\n            if (svg) svg.style.display = '';\r\n        }\r\n    }\r\n}\r\n\r\n// Вызываем при загрузке и при изменении размера окна\r\nwindow.addEventListener('DOMContentLoaded', updateBackgroundFooterBlurHeight);\r\nwindow.addEventListener('resize', updateBackgroundFooterBlurHeight);\r\n\r\nconst swiffySlider = document.querySelector('.swiffy-slider.slider-item-show4')\r\n\r\nif (swiffySlider) {\r\n    if (document.body.clientWidth < 1500 && document.body.clientWidth > 1200) {\r\n        swiffySlider.classList.remove('slider-item-show4')\r\n        swiffySlider.classList.remove('slider-item-show3')\r\n        swiffySlider.classList.remove('slider-item-show2')\r\n\r\n        swiffySlider.classList.add('slider-item-show3')\r\n\r\n        const buttons = Math.ceil(swiffySlider.querySelectorAll('.review-block').length / 3);\r\n        const sliderIndicators = swiffySlider.querySelector('.slider-indicators');\r\n        sliderIndicators.innerHTML = '';\r\n\r\n        for (let i = 0; i < buttons; i++) {\r\n            if (i === 0) {\r\n                sliderIndicators.insertAdjacentHTML('beforeend', `<button class=\"active\"></button>`)\r\n            } else {\r\n                sliderIndicators.insertAdjacentHTML('beforeend', `<button></button>`)\r\n            }\r\n        }\r\n    } else if (document.body.clientWidth <= 1200 && document.body.clientWidth > 992) {\r\n        swiffySlider.classList.remove('slider-item-show4')\r\n        swiffySlider.classList.remove('slider-item-show3')\r\n        swiffySlider.classList.remove('slider-item-show2')\r\n\r\n        swiffySlider.classList.add('slider-item-show2')\r\n\r\n        const buttons = Math.ceil(swiffySlider.querySelectorAll('.review-block').length / 2);\r\n        const sliderIndicators = swiffySlider.querySelector('.slider-indicators');\r\n        sliderIndicators.innerHTML = '';\r\n\r\n        for (let i = 0; i < buttons; i++) {\r\n            if (i === 0) {\r\n                sliderIndicators.insertAdjacentHTML('beforeend', `<button class=\"active\"></button>`)\r\n            } else {\r\n                sliderIndicators.insertAdjacentHTML('beforeend', `<button></button>`)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// dropdown menu pc\r\n\r\nconst dropdowns = document.querySelectorAll('.menu__dropdown');\r\nconst slidesIndexes = document.querySelectorAll('[data-slide]')\r\nconst slider = document.querySelector('.header-slider')\r\nlet index = 0;\r\n\r\nfunction dropdownMenu() {\r\n    if (document.body.clientWidth > 992) {\r\n        const headerWrapper = document.querySelector('.header__wrapper')\r\n\r\n        // показываем выпадающее меню\r\n        dropdowns.forEach((item) => {\r\n            const navLink = item.querySelector('.nav-link');\r\n            const dropdownMenu = item.querySelector('.dropdown-menu');\r\n\r\n            item.addEventListener('mouseover', (e) => {\r\n                if (e.target.classList.contains('nav-link')) {\r\n                    dropdownMenu.classList.add('active');\r\n                    navLink.querySelector('.arrow').classList.add('active');\r\n                    headerWrapper.classList.add('active');\r\n                }\r\n            })\r\n\r\n            item.addEventListener('mouseleave', () => {\r\n                // закрываем меню\r\n                item.querySelector('.dropdown-menu').classList.remove('active');\r\n                navLink.querySelector('.arrow').classList.remove('active');\r\n                headerWrapper.classList.remove('active');\r\n\r\n                setTimeout(() => {\r\n                    // сбрасываем выпадающее меню\r\n                    slidesIndexes.forEach(elem => elem.classList.remove('active'))\r\n                    slidesIndexes[0].classList.add('active')\r\n                    index = 0;\r\n                    slider.style.transform = `translateX(-${index * 100}%)`;\r\n                }, 300)\r\n            })\r\n        })\r\n\r\n        // реализуем переход внутри меню\r\n        slidesIndexes.forEach(item => {\r\n            item.addEventListener('click', () => {\r\n                slidesIndexes.forEach(elem => elem.classList.remove('active'))\r\n                item.classList.add('active')\r\n\r\n                index = +item.dataset.slide\r\n                slider.style.transform = `translateX(-${index * 100}%)`;\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\ndropdownMenu();\r\n\r\nwindow.onresize = () => {\r\n    dropdownMenu();\r\n};\r\n\r\n// mobile menu generator\r\n\r\nconst mobileTitle = document.querySelector('.mobile-menu__title')\r\nconst attrLayouts = document.querySelectorAll(\"[data-layout]\")\r\nconst initialMenu = document.querySelectorAll('[data-initial-layout]')\r\nconst mobileMenu = {}\r\n\r\n// добавляем в массив главное меню\r\nmobileMenu[0] = [mobileTitle.innerHTML]\r\n\r\ninitialMenu.forEach(item => {\r\n    if (!item.querySelector('span')) return;\r\n\r\n    const title = item.querySelector('span').innerHTML.replace(/\\s+/g, ' ').replace('&nbsp;', \" \").trim()\r\n    if (+item.dataset.layout) {\r\n        mobileMenu[0] = [...mobileMenu[0], [title, +item.dataset.layout]]\r\n    } else {\r\n        mobileMenu[0] = [...mobileMenu[0], [title]]\r\n    }\r\n})\r\n\r\n// на первой итерации собираем все заголовки\r\nattrLayouts.forEach(item => {\r\n    if (item.dataset.position.includes('header')) {\r\n        const headerPosition = item.dataset.position.replace(\" \", \"\").split(\",\").indexOf('header');\r\n        const layouts = item.dataset.layout.split(\",\")\r\n\r\n        if (!item.querySelector(\"span\")) return;\r\n\r\n        const itemTitle = item.querySelector(\"span\").innerHTML.replace(/\\s+/g, ' ').replace('&nbsp;', \" \").trim();\r\n\r\n        mobileMenu[`${+layouts[headerPosition]}`] = [itemTitle]\r\n    }\r\n})\r\n\r\n\r\n// на второй итерации составляем меню\r\nattrLayouts.forEach(item => {\r\n    if (item.dataset.position.includes('element')) {\r\n        const layouts = item.dataset.layout.split(\",\")\r\n        let itemTitle;\r\n\r\n        if (item.querySelector(\"a\")) {\r\n            itemTitle = item.querySelector(\"a\").innerHTML.replace(/\\s+/g, ' ').replace('&nbsp;', \" \").trim()\r\n        } else {\r\n            itemTitle = item.querySelector(\"span\").innerHTML.replace(/\\s+/g, ' ').replace('&nbsp;', \" \").trim();\r\n        }\r\n\r\n        if (layouts.length === 1) {\r\n            if (mobileMenu[+layouts[0]]) {\r\n                mobileMenu[+layouts[0]] = [...mobileMenu[+layouts[0]], [itemTitle]]\r\n            } else {\r\n                mobileMenu[+layouts[0]] = [[itemTitle]]\r\n            }\r\n        } else {\r\n            if (mobileMenu[+layouts[0]]) {\r\n                mobileMenu[+layouts[0]] = [...mobileMenu[+layouts[0]], [itemTitle, +layouts[1]]]\r\n            } else {\r\n                mobileMenu[+layouts[0]] = [[itemTitle, +layouts[1]]]\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// добавляем в массив изначальное меню\r\n\r\nfunction menuGenerator(elements, mainMenuField) {\r\n    if (Array.isArray(elements[0])) {\r\n        mobileTitle.innerHTML = elements[0][0]\r\n    } else {\r\n        mobileTitle.innerHTML = elements[0]\r\n    }\r\n\r\n    for (let i = 1; i < elements.length; i++) {\r\n        if (elements[i].length === 2) {\r\n            mainMenuField.insertAdjacentHTML(`beforeend`, `\r\n                <li class=\"nav-item d-flex align-items-center gap-2\" data-layout=\"${elements[i][1]}\">\r\n                    <span class=\"nav-link p-0 p-lg-2\">${elements[i][0]}</span>\r\n                    <svg class=\"arrow\">\r\n                        <use href=\"./img/svg/sprite.svg#arrow\"></use>\r\n                    </svg>\r\n                </li>\r\n            `)\r\n        } else {\r\n            mainMenuField.insertAdjacentHTML(`beforeend`, `\r\n                <li class=\"nav-item\">\r\n                    <a href=\"#\" class=\"nav-link p-0 p-lg-2\">${elements[i][0]}</a>\r\n                </li>\r\n            `)\r\n        }\r\n    }\r\n}\r\n\r\n// составляем само меню при нажатии на кнопки\r\n\r\nlet m_history = [];\r\nconst mainMenuField = document.querySelector('.header__nav ul')\r\nconst mobileArrow = document.querySelector('.mobile-burger-arrow')\r\nmobileArrow.classList.add('disabled')\r\n\r\nfunction computeMobileMenu() {\r\n    const mainLayouts = mainMenuField.querySelectorAll(\"[data-layout]\")\r\n\r\n    mainLayouts.forEach(item => {\r\n        item.addEventListener('click', () => {\r\n            const layout = +item.dataset.layout\r\n            m_history.push(layout)\r\n            mainMenuField.innerHTML = ''\r\n\r\n            // создаём новый список\r\n\r\n            let elements;\r\n\r\n            if (!m_history.length) {\r\n                mobileArrow.classList.add('disabled')\r\n            } else {\r\n                mobileArrow.classList.remove('disabled')\r\n                elements = mobileMenu[m_history.at(-1)];\r\n            }\r\n\r\n            menuGenerator(elements, mainMenuField)\r\n            computeMobileMenu();\r\n        })\r\n    })\r\n}\r\n\r\n// делаем возврат в меню при нажатии на стрелочку\r\n\r\nmobileArrow.addEventListener('click', () => {\r\n    if (m_history.length) {\r\n        m_history.pop();\r\n\r\n        let elements;\r\n\r\n        if (!m_history.length) {\r\n            mobileArrow.classList.add('disabled')\r\n            elements = mobileMenu[0]\r\n        } else {\r\n            elements = mobileMenu[m_history.at(-1)];\r\n        }\r\n\r\n        mainMenuField.innerHTML = ''\r\n        menuGenerator(elements, mainMenuField)\r\n        computeMobileMenu()\r\n    }\r\n})\r\n\r\nif (document.body.clientWidth <= 992) {\r\n    computeMobileMenu();\r\n}\r\n\r\n// open and close burger\r\n\r\nconst burger = document.querySelector('.header__burger');\r\nconst h_wrapper = document.querySelector('.header__wrapper')\r\nconst navbar = document.querySelector('.header-wrap');\r\nconst cross = navbar.querySelector('.mobile-burger-cross')\r\n\r\nburger.addEventListener('click', () => {\r\n    h_wrapper.classList.toggle('active');\r\n    burger.classList.toggle('active');\r\n    navbar.classList.toggle('active');\r\n    document.body.classList.toggle('hidden')\r\n});\r\n\r\ncross.addEventListener('click', () => {\r\n    burger.classList.toggle('active');\r\n    navbar.classList.toggle('active');\r\n    document.body.classList.toggle('hidden')\r\n\r\n    setTimeout(() => {\r\n        h_wrapper.classList.toggle('active');\r\n        mobileArrow.classList.add('disabled')\r\n        m_history = []\r\n\r\n        let elements = mobileMenu[0]\r\n        mainMenuField.innerHTML = ''\r\n\r\n        menuGenerator(elements, mainMenuField)\r\n        computeMobileMenu()\r\n    }, 300)\r\n});\r\n\r\n// imask\r\nlet elements = document.querySelectorAll(\"input[type='tel']\")\r\n\r\nlet maskOptions = {\r\n    mask: '+7 (000) 000 - 00 - 00',\r\n    lazy: false\r\n}\r\n\r\nlet telephoneMasks = []\r\n\r\nelements.forEach(element => {\r\n    let mask = new IMask(element, maskOptions);\r\n    telephoneMasks.push(mask);\r\n})\r\n\r\n// mail\r\nlet elements2 = document.querySelectorAll('#email');\r\n\r\nlet maskOptions2 = {\r\n    mask: function (value) {\r\n        if (/^[a-z0-9_\\.-]+$/.test(value))\r\n            return true;\r\n        if (/^[a-z0-9_\\.-]+@$/.test(value))\r\n            return true;\r\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+$/.test(value))\r\n            return true;\r\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.$/.test(value))\r\n            return true;\r\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}$/.test(value))\r\n            return true;\r\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}\\.$/.test(value))\r\n            return true;\r\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}\\.[a-z]{1,4}$/.test(value))\r\n            return true;\r\n        return false;\r\n    },\r\n    lazy: false\r\n}\r\n\r\nlet emailMasks = []\r\n\r\nelements2.forEach(element2 => {\r\n    let mask2 = new IMask(element2, maskOptions2);\r\n    emailMasks.push(mask2);\r\n})\r\n\r\n\r\n// Получаем все якорные ссылки из блока навигации\r\nconst navLinks = document.querySelectorAll('.table_of_context a[href^=\"#\"]');\r\n\r\n// Получаем все секции, на которые ссылаются якоря\r\nconst sections = Array.from(navLinks).map(link => {\r\n    const id = link.getAttribute('href').substring(1);\r\n    return document.getElementById(id);\r\n}).filter(Boolean);\r\n\r\nfunction activateCurrentLink() {\r\n    const scrollPosition = window.scrollY + 150; // +100 для небольшого запаса\r\n\r\n    sections.forEach((target, idx) => {\r\n        const { top } = target.getBoundingClientRect();\r\n        const targetTop = top + window.scrollY;\r\n        const targetHeight = target.offsetHeight;\r\n\r\n        // Проверяем, виден ли элемент\r\n        if (scrollPosition >= targetTop && scrollPosition < targetTop + targetHeight) {\r\n            navLinks.forEach(l => l.classList.remove('active'));\r\n            navLinks[idx].classList.add('active');\r\n        }\r\n    });\r\n}\r\n\r\n// Вызываем функцию при загрузке и при прокрутке\r\nwindow.addEventListener('load', activateCurrentLink);\r\nactivateCurrentLink();\r\nwindow.addEventListener('scroll', activateCurrentLink);\r\n\r\n// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\r\nlet vh = window.innerHeight * 0.01;\r\n// Then we set the value in the --vh custom property to the root of the document\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\nwindow.addEventListener('resize', () => {\r\n    // We execute the same script as before\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n});\r\n"],"names":["swiffyslider","version","init","e","document","body","t","querySelectorAll","initSlider","i","classList","contains","addEventListener","slide","passive","slideToByIndicator","onSlideEnd","handleIndicators","getAttribute","autoPlay","some","setVisibleSlides","IntersectionObserver","forEach","isIntersecting","target","add","remove","querySelector","root","threshold","observe","s","l","r","o","children","n","parseInt","window","getComputedStyle","columnGap","a","offsetWidth","d","scrollLeft","scrollWidth","scroll","left","behavior","event","Array","from","parentElement","indexOf","length","closest","slideTo","clearTimeout","setTimeout","capture","setInterval","once","Math","abs","round","currentScript","hasAttribute","onreadystatechange","readyState","swiffysliderextensions","draggingtimer","handleMouseDrag","srcElement","style","cursor","clientX","removeEventListener","extensions","IMask","pathComputer","initialPath","divider","element","array","split","item","idx","isNaN","join","offsetPath","trajectory1_1","trajectory1_1_divider","trajectory2_1","trajectory2_1_divider","circle1_1","circle2_1","trajectory1_2","trajectory1_2_divider","circle1_2","trajectory2_2","trajectory2_2_divider","circle2_2","trajectory1_3","trajectory1_3_divider","circle1_3","trajectory2_3","trajectory2_3_divider","circle2_3","trajectory1_4","trajectory1_4_divider","circle1_4","trajectory2_4","trajectory2_4_divider","circle2_4","trajectory1_5","trajectory1_5_divider","circle1_5","trajectory2_5","trajectory2_5_divider","circle2_5","circleW_1","getBoundingClientRect","width","circleW_2","circle","circle1","circle2","windowWidth","clientWidth","windowHeight","innerHeight","centerX","centerY","radius","duration","halfDuration","offsetX","offsetY","start","animate","timestamp","elapsed","angle","PI","sin","cos","x1","y1","x2","y2","top","x","y","requestAnimationFrame","timeouts","clearAllTimers","setSafeTimeout","callback","delay","push","resetAnimation","animation","startFirstCircles","startSecondCircles","startThirdCircles","startFourthCircles","startFifthCircles","restartAllCircles","allCircles","hidden","updateBackgroundFooterBlurHeight","footer","backgroundBlur","svg","footerHeight","offsetHeight","newHeight","height","innerWidth","display","swiffySlider","buttons","ceil","sliderIndicators","innerHTML","insertAdjacentHTML","dropdowns","slidesIndexes","slider","index","dropdownMenu","headerWrapper","navLink","elem","transform","dataset","onresize","mobileTitle","attrLayouts","initialMenu","mobileMenu","title","replace","trim","layout","position","includes","headerPosition","layouts","itemTitle","menuGenerator","elements","mainMenuField","isArray","m_history","mobileArrow","computeMobileMenu","mainLayouts","at","pop","burger","h_wrapper","navbar","cross","toggle","maskOptions","mask","lazy","telephoneMasks","elements2","maskOptions2","value","test","emailMasks","element2","mask2","navLinks","sections","map","link","id","substring","getElementById","filter","Boolean","activateCurrentLink","scrollPosition","scrollY","targetTop","targetHeight","vh","documentElement","setProperty"],"sourceRoot":""}